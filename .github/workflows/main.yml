name: Update README with Tistory posts
on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install dependencies and fetch posts
        run: |
          pip install requests beautifulsoup4 lxml
          cat > fetch_tistory.py << 'EOF'
          import requests
          import xml.etree.ElementTree as ET
          from datetime import datetime
          import re
          
          headers = {
              'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
              'Accept': 'application/rss+xml, application/xml, text/xml',
              'Accept-Language': 'ko-KR,ko;q=0.9,en;q=0.8',
          }
          
          try:
              response = requests.get('https://gabalsebal.tistory.com/rss', headers=headers, timeout=10)
              print(f"Response status: {response.status_code}")
              
              if response.status_code == 200:
                  root = ET.fromstring(response.content)
                  items = root.findall('.//item')[:5]
                  
                  blog_posts = []
                  for item in items:
                      title = item.find('title').text if item.find('title') is not None else ''
                      link = item.find('link').text if item.find('link') is not None else ''
                      pub_date_str = item.find('pubDate').text if item.find('pubDate') is not None else ''
                      
                      # 날짜 포맷팅
                      formatted_date = ''
                      if pub_date_str:
                          try:
                              pub_date = datetime.strptime(pub_date_str, '%a, %d %b %Y %H:%M:%S %z')
                              formatted_date = pub_date.strftime('%Y-%m-%d')
                          except:
                              formatted_date = pub_date_str[:10]  # 앞 10자리만
                      
                      if title and link:
                          # 제목이 너무 길면 자르기
                          if len(title) > 45:
                              title = title[:42] + '...'
                          
                          blog_posts.append({
                              'title': title,
                              'link': link,
                              'date': formatted_date
                          })
                  
                  # README 업데이트 - 그라데이션 스타일
                  with open('README.md', 'r', encoding='utf-8') as f:
                      readme = f.read()
                  
                  # 블로그 섹션 생성
                  blog_lines = []
                  blog_lines.append('<div align="center">')
                  blog_lines.append('')
                  blog_lines.append('# 📝 Latest Blog Posts')
                  blog_lines.append('')
                  blog_lines.append('![Blog Banner](https://capsule-render.vercel.app/api?type=waving&color=gradient&height=100&section=header&text=가발세발%20Blog&fontSize=30&fontColor=white)')
                  blog_lines.append('')
                  blog_lines.append('</div>')
                  blog_lines.append('')
                  blog_lines.append('<div align="center">')
                  blog_lines.append('')
                  blog_lines.append('| 🎯 **Post Title** | 📅 **Date** | 🔥 **Read** |')
                  blog_lines.append('|:------------------|:------------|:------------|')
                  
                  for post in blog_posts:
                      post_line = f"| [{post['title']}]({post['link']}) | {post['date']} | [📖 Read]({post['link']}) |"
                      blog_lines.append(post_line)
                  
                  blog_lines.append('')
                  blog_lines.append('<br>')
                  blog_lines.append('')
                  blog_lines.append('[![Blog](https://img.shields.io/badge/더%20많은%20글%20보기-FF6B6B?style=for-the-badge&logo=tistory&logoColor=white)](https://gabalsebal.tistory.com)')
                  blog_lines.append('[![RSS](https://img.shields.io/badge/RSS%20구독-FFA500?style=for-the-badge&logo=rss&logoColor=white)](https://gabalsebal.tistory.com/rss)')
                  blog_lines.append('')
                  blog_lines.append('</div>')
                  blog_lines.append('')
                  blog_lines.append('![Blog Footer](https://capsule-render.vercel.app/api?type=waving&color=gradient&height=60&section=footer)')
                  blog_lines.append('')
                  
                  blog_section = '\n'.join(blog_lines)
                  
                  start_marker = "<!-- BLOG-POST-LIST:START -->"
                  end_marker = "<!-- BLOG-POST-LIST:END -->"
                  
                  if start_marker in readme and end_marker in readme:
                      before = readme[:readme.find(start_marker) + len(start_marker)]
                      after = readme[readme.find(end_marker):]
                      readme = before + "\n" + blog_section + after
                  else:
                      readme += f"\n{start_marker}\n{blog_section}{end_marker}\n"
                  
                  with open('README.md', 'w', encoding='utf-8') as f:
                      f.write(readme)
                  
                  print("README updated successfully!")
              else:
                  print(f"Failed to fetch RSS: {response.status_code}")
                  exit(1)
                  
          except Exception as e:
              print(f"Error: {e}")
              exit(1)
          EOF
          
          python fetch_tistory.py
          
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update README with latest blog posts"
            git push
          fi