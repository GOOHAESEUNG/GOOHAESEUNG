name: Update README with Tistory posts
on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install dependencies and fetch posts
        run: |
          pip install requests beautifulsoup4 lxml
          cat > fetch_tistory.py << 'EOF'
          import requests
          import xml.etree.ElementTree as ET
          from datetime import datetime
          import re
          
          headers = {
              'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
              'Accept': 'application/rss+xml, application/xml, text/xml',
              'Accept-Language': 'ko-KR,ko;q=0.9,en;q=0.8',
          }
          
          try:
              response = requests.get('https://gabalsebal.tistory.com/rss', headers=headers, timeout=10)
              print(f"Response status: {response.status_code}")
              
              if response.status_code == 200:
                  root = ET.fromstring(response.content)
                  items = root.findall('.//item')[:5]
                  
                  blog_posts = []
                  for item in items:
                      title = item.find('title').text if item.find('title') is not None else ''
                      link = item.find('link').text if item.find('link') is not None else ''
                      pub_date = item.find('pubDate').text if item.find('pubDate') is not None else ''
                      
                      if title and link:
                          blog_posts.append({
                              'title': title,
                              'link': link,
                              'date': pub_date
                          })
                  
                  # README 업데이트
                  with open('README.md', 'r', encoding='utf-8') as f:
                      readme = f.read()
                  
                  blog_section = "## 📝 최근 블로그 포스트\n\n"
                  for post in blog_posts:
                      blog_section += f"- [{post['title']}]({post['link']})\n"
                  blog_section += "\n"
                  
                  start_marker = "<!-- BLOG-POST-LIST:START -->"
                  end_marker = "<!-- BLOG-POST-LIST:END -->"
                  
                  if start_marker in readme and end_marker in readme:
                      before = readme[:readme.find(start_marker) + len(start_marker)]
                      after = readme[readme.find(end_marker):]
                      readme = before + "\n" + blog_section + after
                  else:
                      readme += f"\n{start_marker}\n{blog_section}{end_marker}\n"
                  
                  with open('README.md', 'w', encoding='utf-8') as f:
                      f.write(readme)
                  
                  print("README updated successfully!")
              else:
                  print(f"Failed to fetch RSS: {response.status_code}")
                  exit(1)
                  
          except Exception as e:
              print(f"Error: {e}")
              exit(1)
          EOF
          
          python fetch_tistory.py
          
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git diff --staged --quiet || git commit -m "Update README with latest blog posts"
          git push